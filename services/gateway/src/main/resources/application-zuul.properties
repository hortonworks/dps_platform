#
#   HORTONWORKS DATAPLANE SERVICE AND ITS CONSTITUENT SERVICES
#
#   (c) 2016-2018 Hortonworks, Inc. All rights reserved.
#
#   This code is provided to you pursuant to your written agreement with Hortonworks, which may be the terms of the
#   Affero General Public License version 3 (AGPLv3), or pursuant to a written agreement with a third party authorized
#   to distribute this code.  If you do not have a written agreement with Hortonworks or with an authorized and
#   properly licensed third party, you do not have any rights to this code.
#
#   If this code is provided to you under the terms of the AGPLv3:
#   (A) HORTONWORKS PROVIDES THIS CODE TO YOU WITHOUT WARRANTIES OF ANY KIND;
#   (B) HORTONWORKS DISCLAIMS ANY AND ALL EXPRESS AND IMPLIED WARRANTIES WITH RESPECT TO THIS CODE, INCLUDING BUT NOT
#     LIMITED TO IMPLIED WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE;
#   (C) HORTONWORKS IS NOT LIABLE TO YOU, AND WILL NOT DEFEND, INDEMNIFY, OR HOLD YOU HARMLESS FOR ANY CLAIMS ARISING
#     FROM OR RELATED TO THE CODE; AND
#   (D) WITH RESPECT TO YOUR EXERCISE OF ANY RIGHTS GRANTED TO YOU FOR THE CODE, HORTONWORKS IS NOT LIABLE FOR ANY
#     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, PUNITIVE OR CONSEQUENTIAL DAMAGES INCLUDING, BUT NOT LIMITED TO,
#     DAMAGES RELATED TO LOST REVENUE, LOST PROFITS, LOSS OF INCOME, LOSS OF BUSINESS ADVANTAGE OR UNAVAILABILITY,
#     OR LOSS OR CORRUPTION OF DATA.
#

#This name will show up in Consul
spring.application.name=zuul
# Port at which the gateway is available
server.port=8762
zuul.prefix=/service

spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.port=8500

#Use client side LB
spring.cloud.kubernetes.discovery.enabled=false
spring.cloud.consul.ribbon.enabled=true
spring.cloud.consul.discovery.preferIpAddress=true
spring.cloud.circuit.breaker.enabled=false
hystrix.command.default.execution.timeout.enabled=false
ribbon.ConnectTimeout=60000
ribbon.ReadTimeout=60000

#This config does not seem to work well, For now attaching a Pre filter to throw out any non /api requests
#zuul.ignoredServices=*
zuul.add-proxy-headers=false

#Turn off in prod
zuul.debug.request=true

zuul.routes.cs.path=/clusters/**
zuul.routes.cs.serviceId=clusters

zuul.routes.db.path=/db/**
zuul.routes.db.serviceId=db

zuul.routes.dp.path=/core/**
zuul.routes.dp.serviceId=core

#Ambari Dispatch endpoint
#This endpoint can be used to proxy Cluster API's with the call passing through cluster service
zuul.routes.hdp.path=/hdp/**
zuul.routes.hdp.serviceId=hdp_proxy
zuul.routes.hdp.sensitiveHeaders=Cookie,Set-Cookie

zuul.routes.cluster.path=/proxy/**
zuul.routes.cluster.serviceId=hdp_proxy
zuul.routes.cluster.sensitiveHeaders=

zuul.routes.knox.path=/knox/**
zuul.routes.knox.serviceId=knox

# hack to make cloudbreak use https
enable.cloudbreak=false
zuul.routes.cloudbreak.path=/cloudbreak/**
zuul.routes.cloudbreak.serviceId=cloudbreak
zuul.routes.cloudbreak.sensitiveHeaders=
cloudbreak.ribbon.IsSecure=true

# serialization
spring.jackson.serialization.write_dates_as_timestamps=false

#sso
# if sso is enabled. one should set signing.pub.key.path as well
sso.enabled=false
#path to knox public key. eg /usr/certs/konx-signing.pem.
#To generate this key one has to export certificate form knox. one needs to knox the knox master password
#keytool -export -alias gateway-identity -storepass <gatewaymasterkey> -keystore <KNOX_HOME>/data\security\keystores\gateway.jks -rfc ><path to cert file>
#eg keytool -export -alias gateway-identity -storepass master -keystore gateway.jks -rfc  >/usr/certs/knox-signing.pem
#signing.pub.key.path=/usr/certs/knox-signing.pem
signing.pub.key.path=

sso.cookie.name=dp-hadoop-jwt
#sso cookie domain. #This should match with knox configuration if specified (see knoxsso.cookie.domain.suffix in KnoxSSO cookie provider)
#if knoxsso.cookie.domain.suffix is not present it means it is defaulted to the domain name with which you access the application.
#If left empty the domain is inferered from hostname of knox.url
sso.cookie.domain=
knox.url.discover.fromrequest=true

server.domain=dataplane
knox.route=knox
knox.websso.path=/gateway/knoxsso/knoxauth/login.html
metaredirect.forsafari=true

# configuration for JWT signing keys. Need to be overridden
jwt.public.key.path=
jwt.private.key.path=
jwt.private.key.password=

#validity in minutes
jwt.validity.minutes=120

#Set to false if the browser should be allowed to send cookies over an unsecured channel. Defaults to true
jwt.cookie.secure.only=true

#ldap resync
ldap.groups.resync.interval.minutes=120


management.security.enabled=false
management.security.sessions=stateless
management.add-application-context-header=false

security.basic.enabled=false
security.sessions=stateless


