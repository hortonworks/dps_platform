---
swagger: '2.0'
info:
  title: Ratings API for db-service
  version: 0.0.1
  description: |
    Proposed API for ratings which will be used by other services to add/retrieve/update ratings

consumes:
  - application/json
produces:
  - application/json

paths:
  /api/ratings:
    get:
      summary: Get rating related to a particular object( e.g. a particular asset collection)
      parameters:
      - name: objectId
        in: query
        description: the ID of the object for which rating is fetched
        required: true
        type: string
      - name: objectType
        in: query
        description: the type of the object (e.g. assetCollection)
        required: true
        type: string
      - name: userId
        in: query
        description: the ID of the user for whom rating is being fetched
        required: true
        type: string

      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Rating'
        404:
          description: Not Found
        400:
          description: Bad request
        500:
          description: internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

    post:
      summary: Add a new rating
      parameters:
        - in: body
          name: Rating
          required: true
          schema:
            $ref: '#/definitions/Rating'
      responses:
        201:
          description: CREATED
          schema:
            $ref: '#/definitions/Rating'
        400:
          description: rating is not supported for the supplied objectType or request was malformed
        500:
          description: internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'


  /api/ratings/{id}:
    patch:
      summary: Update rating
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: updatedRatingObject
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatedRatingObject'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Rating'
        400:
          description: Bad request
        500:
          description: internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

  /api/ratings/action/average:
    get:
      summary: Get average rating related to a particular object( e.g. a particular asset collection)
      parameters:
      - name: objectId
        in: query
        description: the ID of the object for which rating is fetched
        required: true
        type: string
      - name: objectType
        in: query
        description: the type of the object (e.g. assetCollection)
        required: true
        type: string

      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Average'
        404:
          description: Not Found
        400:
          description: Bad request
        500:
          description: internal server error
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'

definitions:

  Rating:
    description: rating object which contains all information related to a rating
    type: object
    required:
      - rating
      - objectType
      - objectId
      - createdBy
    properties:
      id:
        type: integer
        format: integer64
        description: id of the rating
      rating:
        type: number
        format: float
        description: rating
      objectType:
        type: string
      objectId:
        type: integer
        format: integer64
      createdBy:
        type: integer
        format: integer64

  UpdatedRatingObject:
    description: a tuple which consists of updated rating
    type: object
    required:
      - rating
      - userId
    properties:
      rating:
        type: number
        format: float
      userId:
        type: integer
        format: integer64

  Average:
    description: a tuple which consists of average rating and total votes
    type: object
    required:
      - average
      - votes
    properties:
      average:
        type: number
        format: float
      votes:
        type: integer
        format: integer32

  Error:
    type: object
    required:
      - code
      - message
      - errorType
    properties:
      code:
        type: string
        description: Error code
      message:
        type: string
        description: Description/trace of the error
      errorType:
        type: string
        description: Text describing the type of errror , may be indicating its origin